{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sodhi\\\\Desktop\\\\Stackoverflow\\\\FAQ-Dashboard\\\\src\\\\components\\\\FAQAccordion.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Accordion.css\"; // Import the Accordion.css file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Accordion({\n  question\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(question.open);\n  const toggle = () => setIsOpen(prevOpen => !prevOpen);\n  const styles = {\n    backgroundImage: isOpen ? `url(\"./assets/icon-minus.svg\")` : `url(\"./assets/icon-plus.svg\")`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single-question\",\n    onClick: toggle,\n    role: \"button\",\n    \"aria-expanded\": isOpen,\n    \"aria-controls\": `answer-${question.id}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles,\n        \"aria-label\": isOpen ? 'Collapse' : 'Expand'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"p\", {\n      id: `answer-${question.id}`,\n      className: \"answer\",\n      children: question.answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Accordion, \"hJu9m4OK7bZuG30H1NJbQEttUos=\");\n_c = Accordion;\nAccordion.propTypes = {\n  question: PropTypes.shape({\n    question: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n    open: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired\n  }).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["useState","PropTypes","jsxDEV","_jsxDEV","Accordion","question","_s","isOpen","setIsOpen","open","toggle","prevOpen","styles","backgroundImage","className","onClick","role","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","style","answer","_c","propTypes","shape","string","isRequired","bool","$RefreshReg$"],"sources":["C:/Users/sodhi/Desktop/Stackoverflow/FAQ-Dashboard/src/components/FAQAccordion.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Accordion.css\"; // Import the Accordion.css file\r\n\r\nexport default function Accordion({ question }) {\r\n    const [isOpen, setIsOpen] = useState(question.open);\r\n\r\n    const toggle = () => setIsOpen(prevOpen => !prevOpen);\r\n\r\n    const styles = {\r\n        backgroundImage: isOpen\r\n            ? `url(\"./assets/icon-minus.svg\")`\r\n            : `url(\"./assets/icon-plus.svg\")`,\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"single-question\" \r\n            onClick={toggle} \r\n            role=\"button\" \r\n            aria-expanded={isOpen} \r\n            aria-controls={`answer-${question.id}`}\r\n        >\r\n            <div className=\"question-heading\">\r\n                <h2>{question.question}</h2>\r\n                <button \r\n                    type=\"button\" \r\n                    style={styles} \r\n                    aria-label={isOpen ? 'Collapse' : 'Expand'}\r\n                ></button>\r\n            </div>\r\n            {isOpen && <p id={`answer-${question.id}`} className=\"answer\">{question.answer}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nAccordion.propTypes = {\r\n    question: PropTypes.shape({\r\n        question: PropTypes.string.isRequired,\r\n        answer: PropTypes.string.isRequired,\r\n        open: PropTypes.bool.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACK,QAAQ,CAACI,IAAI,CAAC;EAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAMF,SAAS,CAACG,QAAQ,IAAI,CAACA,QAAQ,CAAC;EAErD,MAAMC,MAAM,GAAG;IACXC,eAAe,EAAEN,MAAM,GACjB,gCAAgC,GAChC;EACV,CAAC;EAED,oBACIJ,OAAA;IACIW,SAAS,EAAC,iBAAiB;IAC3BC,OAAO,EAAEL,MAAO;IAChBM,IAAI,EAAC,QAAQ;IACb,iBAAeT,MAAO;IACtB,iBAAe,UAAUF,QAAQ,CAACY,EAAE,EAAG;IAAAC,QAAA,gBAEvCf,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAI,QAAA,gBAC7Bf,OAAA;QAAAe,QAAA,EAAKb,QAAQ,CAACA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5BnB,OAAA;QACIoB,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAEZ,MAAO;QACd,cAAYL,MAAM,GAAG,UAAU,GAAG;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EACLf,MAAM,iBAAIJ,OAAA;MAAGc,EAAE,EAAE,UAAUZ,QAAQ,CAACY,EAAE,EAAG;MAACH,SAAS,EAAC,QAAQ;MAAAI,QAAA,EAAEb,QAAQ,CAACoB;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd;AAAChB,EAAA,CA9BuBF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAgCjCA,SAAS,CAACuB,SAAS,GAAG;EAClBtB,QAAQ,EAAEJ,SAAS,CAAC2B,KAAK,CAAC;IACtBvB,QAAQ,EAAEJ,SAAS,CAAC4B,MAAM,CAACC,UAAU;IACrCL,MAAM,EAAExB,SAAS,CAAC4B,MAAM,CAACC,UAAU;IACnCrB,IAAI,EAAER,SAAS,CAAC8B,IAAI,CAACD,UAAU;IAC/Bb,EAAE,EAAEhB,SAAS,CAAC4B,MAAM,CAACC;EACzB,CAAC,CAAC,CAACA;AACP,CAAC;AAAC,IAAAJ,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}