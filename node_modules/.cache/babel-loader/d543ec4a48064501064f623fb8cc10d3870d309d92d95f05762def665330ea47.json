{"ast":null,"code":"export const data = [{\n  id: \"1\",\n  question: \"What is React?\",\n  answer: \"React is a JavaScript library for building user interfaces, maintained by Facebook.\",\n  open: false\n}, {\n  id: \"2\",\n  question: \"What are React components?\",\n  answer: \"Components are the building blocks of a React application, allowing you to split the UI into independent, reusable pieces.\",\n  open: false\n}, {\n  id: \"3\",\n  question: \"What is JSX in React?\",\n  answer: \"JSX stands for JavaScript XML. It allows you to write HTML elements in JavaScript and place them in the DOM without using createElement() and appendChild().\",\n  open: false\n}, {\n  id: \"4\",\n  question: \"What are hooks in React?\",\n  answer: \"Hooks are functions that let you use state and other React features in functional components.\",\n  open: false\n}, {\n  id: \"5\",\n  question: \"What is the virtual DOM in React?\",\n  answer: \"The virtual DOM is a lightweight copy of the real DOM that React uses to optimize updates.\",\n  open: false\n}, {\n  id: \"6\",\n  question: \"How does state management work in React?\",\n  answer: \"State management in React involves managing the state within components and using tools like Context API or Redux for more complex state management needs.\",\n  open: false\n}, {\n  id: \"7\",\n  question: \"What are props in React?\",\n  answer: \"Props are arguments passed into React components. They allow data to be passed from one component to another.\",\n  open: false\n}, {\n  id: \"8\",\n  question: \"What is React Router?\",\n  answer: \"React Router is a library for handling routing in React applications, allowing you to navigate between different views or components.\",\n  open: false\n}, {\n  id: \"9\",\n  question: \"What is the purpose of useEffect hook?\",\n  answer: \"The useEffect hook allows you to perform side effects in function components, such as data fetching, subscriptions, or manually changing the DOM.\",\n  open: false\n}, {\n  id: \"10\",\n  question: \"What is Redux?\",\n  answer: \"Redux is a state management library for JavaScript applications, commonly used with React to manage and centralize application state.\",\n  open: false\n}, {\n  id: \"11\",\n  question: \"What is the difference between controlled and uncontrolled components?\",\n  answer: \"Controlled components are components whose form data is controlled by React state, while uncontrolled components store their data internally in the DOM.\",\n  open: false\n}, {\n  id: \"12\",\n  question: \"What is Context API in React?\",\n  answer: \"The Context API is a way to manage and pass down global state to components without having to pass props manually at every level.\",\n  open: false\n}, {\n  id: \"13\",\n  question: \"What is the purpose of useMemo hook?\",\n  answer: \"The useMemo hook is used to memoize expensive calculations and avoid recalculating them on every render.\",\n  open: false\n}, {\n  id: \"14\",\n  question: \"How do you handle forms in React?\",\n  answer: \"Forms in React can be handled using controlled components, where form inputs are controlled by React state, or using libraries like Formik for complex forms.\",\n  open: false\n}, {\n  id: \"15\",\n  question: \"What is the difference between useState and useReducer?\",\n  answer: \"useState is used for managing simple state in functional components, while useReducer is used for more complex state logic and handling multiple state transitions.\",\n  open: false\n}, {\n  id: \"16\",\n  question: \"What is a higher-order component (HOC)?\",\n  answer: \"A higher-order component is a function that takes a component and returns a new component with additional props or functionality.\",\n  open: false\n}, {\n  id: \"17\",\n  question: \"What is server-side rendering (SSR) in React?\",\n  answer: \"Server-side rendering is the process of rendering React components on the server and sending the fully rendered HTML to the client, improving performance and SEO.\",\n  open: false\n}, {\n  id: \"18\",\n  question: \"What is React's useCallback hook?\",\n  answer: \"The useCallback hook is used to memoize callback functions, preventing them from being recreated on every render and improving performance.\",\n  open: false\n}, {\n  id: \"19\",\n  question: \"How can you optimize performance in a React application?\",\n  answer: \"Performance can be optimized in React applications using techniques like code splitting, lazy loading, memoization, and avoiding unnecessary re-renders.\",\n  open: false\n}, {\n  id: \"20\",\n  question: \"What is React's Suspense?\",\n  answer: \"React's Suspense is a feature that allows you to handle loading states and lazy loading of components more gracefully.\",\n  open: false\n}, {\n  id: \"21\",\n  question: \"What is the purpose of the key prop in React lists?\",\n  answer: \"The key prop helps React identify which items have changed, are added, or are removed, improving the efficiency of re-rendering lists.\",\n  open: false\n}, {\n  id: \"22\",\n  question: \"How do you debug React applications?\",\n  answer: \"React applications can be debugged using tools like React DevTools, browser developer tools, and logging methods like console.log.\",\n  open: false\n}, {\n  id: \"23\",\n  question: \"What are React fragments?\",\n  answer: \"React fragments allow you to group multiple elements without adding extra nodes to the DOM.\",\n  open: false\n}, {\n  id: \"24\",\n  question: \"What is the difference between useEffect and useLayoutEffect?\",\n  answer: \"useEffect is called after the DOM has been painted, while useLayoutEffect is called synchronously after all DOM mutations, allowing you to read layout and trigger re-rendering.\",\n  open: false\n}, {\n  id: \"25\",\n  question: \"What is the purpose of useRef in React?\",\n  answer: \"useRef returns a mutable ref object that persists for the full lifetime of the component, useful for accessing DOM elements or storing mutable values.\",\n  open: false\n}, {\n  id: \"26\",\n  question: \"What are React portals?\",\n  answer: \"React portals provide a way to render children into a DOM node outside of their parent component's DOM hierarchy.\",\n  open: false\n}, {\n  id: \"27\",\n  question: \"How do you handle errors in React components?\",\n  answer: \"Errors in React components can be handled using error boundaries, which are components that catch JavaScript errors in their child component tree and display a fallback UI.\",\n  open: false\n}, {\n  id: \"28\",\n  question: \"What is the role of the render prop pattern?\",\n  answer: \"The render prop pattern is a technique for sharing code between components using a prop whose value is a function that returns a React element.\",\n  open: false\n}, {\n  id: \"29\",\n  question: \"How can you integrate third-party libraries in React?\",\n  answer: \"Third-party libraries can be integrated in React by installing them via npm or yarn and importing them into your components as needed.\",\n  open: false\n}, {\n  id: \"30\",\n  question: \"What is the difference between a presentational component and a container component?\",\n  answer: \"Presentational components are concerned with how things look, while container components are concerned with how things work, often handling state and logic.\",\n  open: false\n}];","map":{"version":3,"names":["data","id","question","answer","open"],"sources":["/Users/sarthakk/Desktop/FAQ-Dashboard/src/utils/data.js"],"sourcesContent":["export const data = [\n    {\n        id: \"1\",\n        question: \"What is React?\",\n        answer: \"React is a JavaScript library for building user interfaces, maintained by Facebook.\",\n        open: false,\n    },\n    {\n        id: \"2\",\n        question: \"What are React components?\",\n        answer: \"Components are the building blocks of a React application, allowing you to split the UI into independent, reusable pieces.\",\n        open: false,\n    },\n    {\n        id: \"3\",\n        question: \"What is JSX in React?\",\n        answer: \"JSX stands for JavaScript XML. It allows you to write HTML elements in JavaScript and place them in the DOM without using createElement() and appendChild().\",\n        open: false,\n    },\n    {\n        id: \"4\",\n        question: \"What are hooks in React?\",\n        answer: \"Hooks are functions that let you use state and other React features in functional components.\",\n        open: false,\n    },\n    {\n        id: \"5\",\n        question: \"What is the virtual DOM in React?\",\n        answer: \"The virtual DOM is a lightweight copy of the real DOM that React uses to optimize updates.\",\n        open: false,\n    },\n    {\n        id: \"6\",\n        question: \"How does state management work in React?\",\n        answer: \"State management in React involves managing the state within components and using tools like Context API or Redux for more complex state management needs.\",\n        open: false,\n    },\n    {\n        id: \"7\",\n        question: \"What are props in React?\",\n        answer: \"Props are arguments passed into React components. They allow data to be passed from one component to another.\",\n        open: false,\n    },\n    {\n        id: \"8\",\n        question: \"What is React Router?\",\n        answer: \"React Router is a library for handling routing in React applications, allowing you to navigate between different views or components.\",\n        open: false,\n    },\n    {\n        id: \"9\",\n        question: \"What is the purpose of useEffect hook?\",\n        answer: \"The useEffect hook allows you to perform side effects in function components, such as data fetching, subscriptions, or manually changing the DOM.\",\n        open: false,\n    },\n    {\n        id: \"10\",\n        question: \"What is Redux?\",\n        answer: \"Redux is a state management library for JavaScript applications, commonly used with React to manage and centralize application state.\",\n        open: false,\n    },\n    {\n        id: \"11\",\n        question: \"What is the difference between controlled and uncontrolled components?\",\n        answer: \"Controlled components are components whose form data is controlled by React state, while uncontrolled components store their data internally in the DOM.\",\n        open: false,\n    },\n    {\n        id: \"12\",\n        question: \"What is Context API in React?\",\n        answer: \"The Context API is a way to manage and pass down global state to components without having to pass props manually at every level.\",\n        open: false,\n    },\n    {\n        id: \"13\",\n        question: \"What is the purpose of useMemo hook?\",\n        answer: \"The useMemo hook is used to memoize expensive calculations and avoid recalculating them on every render.\",\n        open: false,\n    },\n    {\n        id: \"14\",\n        question: \"How do you handle forms in React?\",\n        answer: \"Forms in React can be handled using controlled components, where form inputs are controlled by React state, or using libraries like Formik for complex forms.\",\n        open: false,\n    },\n    {\n        id: \"15\",\n        question: \"What is the difference between useState and useReducer?\",\n        answer: \"useState is used for managing simple state in functional components, while useReducer is used for more complex state logic and handling multiple state transitions.\",\n        open: false,\n    },\n    {\n        id: \"16\",\n        question: \"What is a higher-order component (HOC)?\",\n        answer: \"A higher-order component is a function that takes a component and returns a new component with additional props or functionality.\",\n        open: false,\n    },\n    {\n        id: \"17\",\n        question: \"What is server-side rendering (SSR) in React?\",\n        answer: \"Server-side rendering is the process of rendering React components on the server and sending the fully rendered HTML to the client, improving performance and SEO.\",\n        open: false,\n    },\n    {\n        id: \"18\",\n        question: \"What is React's useCallback hook?\",\n        answer: \"The useCallback hook is used to memoize callback functions, preventing them from being recreated on every render and improving performance.\",\n        open: false,\n    },\n    {\n        id: \"19\",\n        question: \"How can you optimize performance in a React application?\",\n        answer: \"Performance can be optimized in React applications using techniques like code splitting, lazy loading, memoization, and avoiding unnecessary re-renders.\",\n        open: false,\n    },\n    {\n        id: \"20\",\n        question: \"What is React's Suspense?\",\n        answer: \"React's Suspense is a feature that allows you to handle loading states and lazy loading of components more gracefully.\",\n        open: false,\n    },\n    {\n        id: \"21\",\n        question: \"What is the purpose of the key prop in React lists?\",\n        answer: \"The key prop helps React identify which items have changed, are added, or are removed, improving the efficiency of re-rendering lists.\",\n        open: false,\n    },\n    {\n        id: \"22\",\n        question: \"How do you debug React applications?\",\n        answer: \"React applications can be debugged using tools like React DevTools, browser developer tools, and logging methods like console.log.\",\n        open: false,\n    },\n    {\n        id: \"23\",\n        question: \"What are React fragments?\",\n        answer: \"React fragments allow you to group multiple elements without adding extra nodes to the DOM.\",\n        open: false,\n    },\n    {\n        id: \"24\",\n        question: \"What is the difference between useEffect and useLayoutEffect?\",\n        answer: \"useEffect is called after the DOM has been painted, while useLayoutEffect is called synchronously after all DOM mutations, allowing you to read layout and trigger re-rendering.\",\n        open: false,\n    },\n    {\n        id: \"25\",\n        question: \"What is the purpose of useRef in React?\",\n        answer: \"useRef returns a mutable ref object that persists for the full lifetime of the component, useful for accessing DOM elements or storing mutable values.\",\n        open: false,\n    },\n    {\n        id: \"26\",\n        question: \"What are React portals?\",\n        answer: \"React portals provide a way to render children into a DOM node outside of their parent component's DOM hierarchy.\",\n        open: false,\n    },\n    {\n        id: \"27\",\n        question: \"How do you handle errors in React components?\",\n        answer: \"Errors in React components can be handled using error boundaries, which are components that catch JavaScript errors in their child component tree and display a fallback UI.\",\n        open: false,\n    },\n    {\n        id: \"28\",\n        question: \"What is the role of the render prop pattern?\",\n        answer: \"The render prop pattern is a technique for sharing code between components using a prop whose value is a function that returns a React element.\",\n        open: false,\n    },\n    {\n        id: \"29\",\n        question: \"How can you integrate third-party libraries in React?\",\n        answer: \"Third-party libraries can be integrated in React by installing them via npm or yarn and importing them into your components as needed.\",\n        open: false,\n    },\n    {\n        id: \"30\",\n        question: \"What is the difference between a presentational component and a container component?\",\n        answer: \"Presentational components are concerned with how things look, while container components are concerned with how things work, often handling state and logic.\",\n        open: false,\n    },\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}