export const data = [
    {
        id: "1",
        question: "What is React?",
        answer: "React is a JavaScript library for building user interfaces, maintained by Facebook.",
        open: false,
    },
    {
        id: "2",
        question: "What are React components?",
        answer: "Components are the building blocks of a React application, allowing you to split the UI into independent, reusable pieces.",
        open: false,
    },
    {
        id: "3",
        question: "What is JSX in React?",
        answer: "JSX stands for JavaScript XML. It allows you to write HTML elements in JavaScript and place them in the DOM without using createElement() and appendChild().",
        open: false,
    },
    {
        id: "4",
        question: "What are hooks in React?",
        answer: "Hooks are functions that let you use state and other React features in functional components.",
        open: false,
    },
    {
        id: "5",
        question: "What is the virtual DOM in React?",
        answer: "The virtual DOM is a lightweight copy of the real DOM that React uses to optimize updates.",
        open: false,
    },
    {
        id: "6",
        question: "How does state management work in React?",
        answer: "State management in React involves managing the state within components and using tools like Context API or Redux for more complex state management needs.",
        open: false,
    },
    {
        id: "7",
        question: "What are props in React?",
        answer: "Props are arguments passed into React components. They allow data to be passed from one component to another.",
        open: false,
    },
    {
        id: "8",
        question: "What is React Router?",
        answer: "React Router is a library for handling routing in React applications, allowing you to navigate between different views or components.",
        open: false,
    },
    {
        id: "9",
        question: "What is the purpose of useEffect hook?",
        answer: "The useEffect hook allows you to perform side effects in function components, such as data fetching, subscriptions, or manually changing the DOM.",
        open: false,
    },
    {
        id: "10",
        question: "What is Redux?",
        answer: "Redux is a state management library for JavaScript applications, commonly used with React to manage and centralize application state.",
        open: false,
    },
    {
        id: "11",
        question: "What is the difference between controlled and uncontrolled components?",
        answer: "Controlled components are components whose form data is controlled by React state, while uncontrolled components store their data internally in the DOM.",
        open: false,
    },
    {
        id: "12",
        question: "What is Context API in React?",
        answer: "The Context API is a way to manage and pass down global state to components without having to pass props manually at every level.",
        open: false,
    },
    {
        id: "13",
        question: "What is the purpose of useMemo hook?",
        answer: "The useMemo hook is used to memoize expensive calculations and avoid recalculating them on every render.",
        open: false,
    },
    {
        id: "14",
        question: "How do you handle forms in React?",
        answer: "Forms in React can be handled using controlled components, where form inputs are controlled by React state, or using libraries like Formik for complex forms.",
        open: false,
    },
    {
        id: "15",
        question: "What is the difference between useState and useReducer?",
        answer: "useState is used for managing simple state in functional components, while useReducer is used for more complex state logic and handling multiple state transitions.",
        open: false,
    },
    {
        id: "16",
        question: "What is a higher-order component (HOC)?",
        answer: "A higher-order component is a function that takes a component and returns a new component with additional props or functionality.",
        open: false,
    },
    {
        id: "17",
        question: "What is server-side rendering (SSR) in React?",
        answer: "Server-side rendering is the process of rendering React components on the server and sending the fully rendered HTML to the client, improving performance and SEO.",
        open: false,
    },
    {
        id: "18",
        question: "What is React's useCallback hook?",
        answer: "The useCallback hook is used to memoize callback functions, preventing them from being recreated on every render and improving performance.",
        open: false,
    },
    {
        id: "19",
        question: "How can you optimize performance in a React application?",
        answer: "Performance can be optimized in React applications using techniques like code splitting, lazy loading, memoization, and avoiding unnecessary re-renders.",
        open: false,
    },
    {
        id: "20",
        question: "What is React's Suspense?",
        answer: "React's Suspense is a feature that allows you to handle loading states and lazy loading of components more gracefully.",
        open: false,
    },
    {
        id: "21",
        question: "What is the purpose of the key prop in React lists?",
        answer: "The key prop helps React identify which items have changed, are added, or are removed, improving the efficiency of re-rendering lists.",
        open: false,
    },
    {
        id: "22",
        question: "How do you debug React applications?",
        answer: "React applications can be debugged using tools like React DevTools, browser developer tools, and logging methods like console.log.",
        open: false,
    },
    {
        id: "23",
        question: "What are React fragments?",
        answer: "React fragments allow you to group multiple elements without adding extra nodes to the DOM.",
        open: false,
    },
    {
        id: "24",
        question: "What is the difference between useEffect and useLayoutEffect?",
        answer: "useEffect is called after the DOM has been painted, while useLayoutEffect is called synchronously after all DOM mutations, allowing you to read layout and trigger re-rendering.",
        open: false,
    },
    {
        id: "25",
        question: "What is the purpose of useRef in React?",
        answer: "useRef returns a mutable ref object that persists for the full lifetime of the component, useful for accessing DOM elements or storing mutable values.",
        open: false,
    },
    {
        id: "26",
        question: "What are React portals?",
        answer: "React portals provide a way to render children into a DOM node outside of their parent component's DOM hierarchy.",
        open: false,
    },
    {
        id: "27",
        question: "How do you handle errors in React components?",
        answer: "Errors in React components can be handled using error boundaries, which are components that catch JavaScript errors in their child component tree and display a fallback UI.",
        open: false,
    },
    {
        id: "28",
        question: "What is the role of the render prop pattern?",
        answer: "The render prop pattern is a technique for sharing code between components using a prop whose value is a function that returns a React element.",
        open: false,
    },
    {
        id: "29",
        question: "How can you integrate third-party libraries in React?",
        answer: "Third-party libraries can be integrated in React by installing them via npm or yarn and importing them into your components as needed.",
        open: false,
    },
    {
        id: "30",
        question: "What is the difference between a presentational component and a container component?",
        answer: "Presentational components are concerned with how things look, while container components are concerned with how things work, often handling state and logic.",
        open: false,
    },
];
